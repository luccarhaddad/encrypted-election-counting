syntax = "proto3";

package distributed;

option go_package = "pkg/distributed";

service Worker {
  rpc SubmitVote (VoteRequest) returns (VoteResponse);
  rpc SendAggregates (AggregateRequest) returns (AckResponse);
  rpc ReceiveKeyShare (KeyShareRequest) returns (KeyShareResponse);
}

service Controller {
  rpc ReceiveAggregates (AggregateRequest) returns (AckResponse);
  rpc DecryptFinalResult (DecryptRequest) returns (ResultResponse);
}

message KeyShareRequest {
  bytes key_share = 1;
  int32 share_index = 2;
  int32 total_shares = 3;
  bytes public_key = 4;
}

message KeyShareResponse {
  bool success = 1;
}

message VoteRequest {
  string candidate_id = 1;
}

message VoteResponse {
  string status = 1;
}

message AggregateRequest {
  map<string, bytes> encrypted_aggregates = 1;
}

message AckResponse {
  string message = 1;
}

message DecryptRequest {}

message ResultResponse {
  map<string, int32> final_results = 1;
}